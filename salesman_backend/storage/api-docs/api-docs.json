{
    "openapi": "3.0.0",
    "info": {
        "title": "Salesman API Documentation",
        "description": "API documentation for Salesman Consignment System",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://salesman_backend.test",
            "description": "API Server"
        },
        {
            "url": "/Users/mac/Documents/bintang parera/salesman/salesman_backend"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and create token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdefghijklmnopqrstuvwxyz"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "admin@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user (Revoke token)",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Admin User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "admin@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdefghijklmnopqrstuvwxyz"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consignments/list": {
            "get": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Get all consignments for dropdown",
                "operationId": "getConsignmentsListAll",
                "responses": {
                    "200": {
                        "description": "Consignments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "CNS-001"
                                                    },
                                                    "store_name": {
                                                        "type": "string",
                                                        "example": "Toko Baru"
                                                    },
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignments retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/consignments": {
            "post": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Create a new consignment",
                "operationId": "storeConsignment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConsignmentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Consignment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consignment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignment created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/consignments/{id}": {
            "get": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Get consignment details",
                "operationId": "getConsignmentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consignment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consignment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consignment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignment retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consignment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Update consignment details",
                "operationId": "updateConsignment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consignment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConsignmentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consignment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consignment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consignment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Delete a consignment",
                "operationId": "deleteConsignment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consignment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consignment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete consignment with related records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete consignment with related transactions"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consignment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/consignments/{id}/update-status": {
            "post": {
                "tags": [
                    "Consignments"
                ],
                "summary": "Update consignment status (sold/returned)",
                "operationId": "updateConsignmentStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consignment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status",
                                    "sold_quantity",
                                    "returned_quantity"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "sold",
                                            "returned"
                                        ],
                                        "example": "sold"
                                    },
                                    "sold_quantity": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 5
                                    },
                                    "returned_quantity": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 0
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Pembayaran lunas"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consignment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Consignment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consignment status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consignment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/list": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products for dropdown",
                "operationId": "getProductsListAll",
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "PRD-001"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product details",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete product with related records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete product with related consignments or transactions"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores/list": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores for dropdown",
                "operationId": "getStoresListAll",
                "responses": {
                    "200": {
                        "description": "Stores retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Toko Baru"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stores retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores": {
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "operationId": "storeStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Store"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store details",
                "operationId": "getStoreById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Store"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update store details",
                "operationId": "updateStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Store"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a store",
                "operationId": "deleteStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete store with related records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete store with related records"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/summary": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get summary of transactions for reporting",
                "operationId": "getTransactionsSummary",
                "responses": {
                    "200": {
                        "description": "Transactions summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_transactions": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "total_sold": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "total_returned": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "stores_summary": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "store_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "store_name": {
                                                                "type": "string",
                                                                "example": "Toko Baru"
                                                            },
                                                            "total_transactions": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "total_sold": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "total_returned": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transactions summary retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction",
                "operationId": "storeTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction details",
                "operationId": "getTransactionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update transaction details",
                "operationId": "updateTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a transaction",
                "operationId": "deleteTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete transaction with related records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete transaction with related records"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Pagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com?page=1"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "object"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "errors": {
                        "properties": {
                            "field": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Error message"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Store": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Toko Maju Jaya"
                    },
                    "address": {
                        "type": "string",
                        "example": "Jl. Contoh No. 123"
                    },
                    "phone": {
                        "type": "string",
                        "example": "081234567890"
                    },
                    "owner_name": {
                        "type": "string",
                        "example": "Budi Santoso"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -6.2
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 106.816666
                    },
                    "photo_path": {
                        "type": "string",
                        "example": "stores/photo.jpg"
                    },
                    "photo_url": {
                        "type": "string",
                        "example": "http://example.com/storage/stores/photo.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StoreInput": {
                "required": [
                    "name",
                    "address",
                    "phone",
                    "owner_name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Toko Maju Jaya"
                    },
                    "address": {
                        "type": "string",
                        "example": "Jl. Contoh No. 123"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "081234567890"
                    },
                    "owner_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Budi Santoso"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -6.2,
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 106.816666,
                        "nullable": true
                    },
                    "photo": {
                        "description": "Store photo file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Produk A"
                    },
                    "code": {
                        "type": "string",
                        "example": "PRD-001"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 100000
                    },
                    "description": {
                        "type": "string",
                        "example": "Deskripsi produk A"
                    },
                    "photo_path": {
                        "type": "string",
                        "example": "products/photo.jpg"
                    },
                    "photo_url": {
                        "type": "string",
                        "example": "http://example.com/storage/products/photo.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductInput": {
                "required": [
                    "name",
                    "code",
                    "price"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Produk A"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "PRD-001"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 100000
                    },
                    "description": {
                        "type": "string",
                        "example": "Deskripsi produk A",
                        "nullable": true
                    },
                    "photo": {
                        "description": "Product photo file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "Consignment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 10
                    },
                    "consignment_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-07-29"
                    },
                    "pickup_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-05"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "sold",
                            "returned"
                        ],
                        "example": "active"
                    },
                    "photo_path": {
                        "type": "string",
                        "example": "consignments/photo.jpg"
                    },
                    "photo_url": {
                        "type": "string",
                        "example": "http://example.com/storage/consignments/photo.jpg"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Catatan tambahan"
                    },
                    "sold_quantity": {
                        "type": "integer",
                        "example": 5
                    },
                    "returned_quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "remaining_quantity": {
                        "type": "integer",
                        "example": 3
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "ConsignmentInput": {
                "required": [
                    "store_id",
                    "product_id",
                    "quantity",
                    "consignment_date",
                    "pickup_date",
                    "status"
                ],
                "properties": {
                    "store_id": {
                        "description": "ID of the store",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "ID of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity of items consigned",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    },
                    "consignment_date": {
                        "description": "Date when items were consigned",
                        "type": "string",
                        "format": "date",
                        "example": "2025-07-29"
                    },
                    "pickup_date": {
                        "description": "Scheduled pickup date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-05"
                    },
                    "status": {
                        "description": "Current status of consignment",
                        "type": "string",
                        "enum": [
                            "active",
                            "sold",
                            "returned"
                        ],
                        "example": "active"
                    },
                    "photo": {
                        "description": "Consignment photo file",
                        "type": "string",
                        "format": "binary"
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Catatan tambahan",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "consignment_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sold_quantity": {
                        "type": "integer",
                        "example": 5
                    },
                    "returned_quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-01"
                    },
                    "sold_items_photo_path": {
                        "type": "string",
                        "example": "transactions/sold/photo.jpg"
                    },
                    "sold_items_photo_url": {
                        "type": "string",
                        "example": "http://example.com/storage/transactions/sold/photo.jpg"
                    },
                    "returned_items_photo_path": {
                        "type": "string",
                        "example": "transactions/returned/photo.jpg"
                    },
                    "returned_items_photo_url": {
                        "type": "string",
                        "example": "http://example.com/storage/transactions/returned/photo.jpg"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Pembayaran lunas"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "consignment": {
                        "$ref": "#/components/schemas/Consignment"
                    }
                },
                "type": "object"
            },
            "TransactionInput": {
                "required": [
                    "consignment_id",
                    "sold_quantity",
                    "returned_quantity"
                ],
                "properties": {
                    "consignment_id": {
                        "description": "ID of the consignment",
                        "type": "integer",
                        "example": 1
                    },
                    "sold_quantity": {
                        "description": "Number of items sold",
                        "type": "integer",
                        "minimum": 0,
                        "example": 5
                    },
                    "returned_quantity": {
                        "description": "Number of items returned",
                        "type": "integer",
                        "minimum": 0,
                        "example": 2
                    },
                    "transaction_date": {
                        "description": "Date of the transaction",
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-01"
                    },
                    "sold_items_photo": {
                        "description": "Photo of sold items",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "returned_items_photo": {
                        "description": "Photo of returned items",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Pembayaran lunas",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "LoginResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "properties": {
                            "token": {
                                "type": "string",
                                "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                            },
                            "user": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Admin User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "type": "string",
                        "example": "Login successful"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Stores",
            "description": "API Endpoints for Managing Stores"
        },
        {
            "name": "Products",
            "description": "API Endpoints for Managing Products"
        },
        {
            "name": "Consignments",
            "description": "API Endpoints for Managing Consignments"
        },
        {
            "name": "Transactions",
            "description": "API Endpoints for Managing Transactions"
        }
    ]
}